<configuration>

  <!--
   |
   | Lifecycle handler Manager.
   |
   -->
  <lifecycle-handler-manager implementation='org.codehaus.plexus.lifecycle.DefaultLifecycleHandlerManager'>
    <default-lifecycle-handler-id>avalon</default-lifecycle-handler-id>
    <lifecycle-handlers>
      <lifecycle-handler implementation='org.codehaus.plexus.personality.avalon.AvalonLifecycleHandler'>
        <id>avalon</id>
        <name>Avalon Lifecycle Handler</name>
        <begin-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.LogEnablePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ContextualizePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ServicePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ComposePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ConfigurePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.InitializePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.StartPhase'/>
        </begin-segment>
        <suspend-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.SuspendPhase'/>
        </suspend-segment>
        <resume-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ResumePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.RecontextualizePhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.ReconfigurePhase'/>
        </resume-segment>
        <end-segment>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.StopPhase'/>
          <phase implementation='org.codehaus.plexus.personality.avalon.lifecycle.phase.DisposePhase'/>
        </end-segment>
      </lifecycle-handler>
    </lifecycle-handlers>
  </lifecycle-handler-manager>
 
  <load-on-start>
    <component>
       <role>org.codehaus.plexus.jetty.ServletContainer</role>
    </component>
    <component>
       <role>org.codehaus.xfire.service.Service</role>
       <role-hint>Book</role-hint>
    </component>
  </load-on-start>

  <component-repository implementation="org.codehaus.plexus.personality.avalon.AvalonComponentRepository">
    <composition-resolver implementation="org.codehaus.plexus.component.composition.DefaultCompositionResolver"/>
  </component-repository>

  <resources>
    <jar-repository>${plexus.home}/lib</jar-repository>
    <directory>${plexus.home}/conf</directory>
  </resources>

  <components>

    <!--
     |
     | Jetty ServletContainer component.
     |
     -->
    <component>
      <role>org.codehaus.plexus.jetty.ServletContainer</role>
      <implementation>org.codehaus.plexus.jetty.JettyServletContainer</implementation>
      <lifecycle-handler>plexus</lifecycle-handler>
      <configuration>
        <socket-listeners>
          <socket-listener>
            <host>*</host>
            <port>8080</port>
          </socket-listener>
        </socket-listeners>
        <webappsDirectory>${plexus.home}/web-apps</webappsDirectory>
        <extractWars>true</extractWars>
      </configuration>
    </component>

    <component>
      <role>org.codehaus.xfire.service.Service</role>
      <roleHint>Echo</roleHint>
      <implementation>org.codehaus.xfire.java.DefaultJavaService</implementation>
      <configuration>
        
      </configuration>
    </component>

    <component>
      <role>org.codehaus.xfire.service.Service</role>
      <roleHint>Bean</roleHint>
      <implementation>org.codehaus.xfire.java.DefaultJavaService</implementation>
      <configuration>
        <name>Bean</name>
        <namespace>urn:Bean</namespace>
        <serviceClass>org.codehaus.xfire.demo.java.ArrayService</serviceClass>
        <allowedMethods></allowedMethods>
        <serviceProvider>java</serviceProvider>
        <soapVersion>1.1</soapVersion>
        <style>wrapped</style>
        <use>literal</use>
        <types>
          
          <type class="org.codehaus.xfire.test.SimpleBean" 
            name="SimpleBean" 
            namespace="urn:Bean" 
            type="org.codehaus.xfire.service.java.types.BeanType" />
            
          <type class="org.codehaus.xfire.test.SimpleBean[]" 
            name="ArrayOfBean" 
            namespace="urn:Bean" 
            type="org.codehaus.xfire.service.java.types.ArrayType" />
            
          <type class="java.lang.String[]" 
            name="ArrayOfString" 
            namespace="urn:Bean" 
            type="org.codehaus.xfire.service.java.types.ArrayType" />
            
        </types>
      </configuration>
    </component>
        
  </components>

  
</configuration>
