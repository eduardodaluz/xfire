<beans xmlns:tns="http://xfire.codehaus.org/config/1.0">
   <!--  =============  User Token with Plain Pasword  ============= -->
	<tns:service>
		<!--  -->
		<tns:name>BookServiceUTPP</tns:name>
		<tns:namespace>http://xfire.codehaus.org/BookService</tns:namespace>
		<tns:serviceClass>org.codehaus.xfire.demo.BookService</tns:serviceClass>
		<!-- tns:inHandlers>
			<tns:handler handlerClass="org.codehaus.xfire.util.dom.DOMInHandler" />
			<bean
				id="org.codehaus.xfire.security.wssecurity.WSS4JInHandler"
				class="org.codehaus.xfire.security.wssecurity.WSS4JInecurityHandler">
				<property name="configuration">
					<props>
						<prop key="xfire.security.actions">usertoken</prop>
					</props>
				</property>
			</bean>
			<tns:handler handlerClass="org.codehaus.xfire.demo.ValidateUserTokenHandler" />
		</tns:inHandlers -->
	</tns:service>
	
	<!--  ============= User Token with Hashed Password   ============= -->
	<tns:service>
		<tns:name>BookServiceUTHP</tns:name>
		<tns:namespace>	http://xfire.codehaus.org/BookService</tns:namespace>
		<tns:serviceClass>org.codehaus.xfire.demo.BookService</tns:serviceClass>
		<!--  tns:inHandlers>
			<tns:handler handlerClass="org.codehaus.xfire.util.dom.DOMInHandler" />
			<bean
				id="org.codehaus.xfire.security.wssecurity.WSS4JInSecurityHandler"
				class="org.codehaus.xfire.security.wssecurity.WSS4JInSecurityHandler">
				<property name="configuration">
					<props>
						<prop key="xfire.security.actions">usertoken</prop>
						<prop key="xfire.security.password.callback">org.codehaus.xfire.demo.BookPasswordCallback
						</prop>
					</props>
				</property>
			</bean>
			<tns:handler handlerClass="org.codehaus.xfire.demo.ValidateUserTokenHandler" />
		</tns:inHandlers -->
	</tns:service>

	<!--  ============= Encryption   ============= -->
	<tns:service>
		<tns:name>BookServiceENC</tns:name>
		<tns:namespace>http://xfire.codehaus.org/BookService</tns:namespace>
		<tns:serviceClass>org.codehaus.xfire.demo.BookService</tns:serviceClass>

		<tns:inHandlers>
			<tns:handler handlerClass="org.codehaus.xfire.util.dom.DOMInHandler" />
			<bean
				id="org.codehaus.xfire.security.wss4j.WSS4JInHandler"
				class="org.codehaus.xfire.security.wss4j.WSS4JInHandler">
				<property name="properties">
					<props>
						<prop key="action">Encrypt</prop>
						<prop key="decryptionPropFile">META-INF/xfire/insecurity_enc.properties</prop>
						<prop key="passwordCallbackClass" >org.codehaus.xfire.demo.PasswordHandler</prop>
					</props>
				</property>
			</bean>
		</tns:inHandlers>
	</tns:service>

	<!--  ============= TimeStamp  ============= -->
	<tns:service>
		<tns:name>BookServiceTS</tns:name>
		<tns:namespace>http://xfire.codehaus.org/BookService</tns:namespace>
		<tns:serviceClass>org.codehaus.xfire.demo.BookService</tns:serviceClass>

		<!--  tns:inHandlers>
			<tns:handler
				handlerClass="org.codehaus.xfire.util.dom.DOMInHandler" />
			<bean
				id="org.codehaus.xfire.security.wssecurity.WSS4JInSecurityHandler"
				class="org.codehaus.xfire.security.wssecurity.WSS4JInSecurityHandler">
				<property name="configuration">
					<props>
						<prop key="xfire.security.actions">timestamp</prop>
					</props>
				</property>
			</bean>
		</tns:inHandlers -->
	</tns:service>

<!--  ============= Signature  ============= -->
	<tns:service>
		<tns:name>BookServiceSign</tns:name>
		<tns:namespace>http://xfire.codehaus.org/BookService</tns:namespace>
		<tns:serviceClass>org.codehaus.xfire.demo.BookService</tns:serviceClass>

		<!--  tns:inHandlers>
			<tns:handler
				handlerClass="org.codehaus.xfire.util.dom.DOMInHandler" />
			<bean
				id="org.codehaus.xfire.security.wssecurity.WSS4JInSecurityHandler"
				class="org.codehaus.xfire.security.wssecurity.WSS4JInSecurityHandler">
				<property name="configuration">
					<props>
						<prop key="xfire.security.actions">signature</prop>
						<prop key="xfire.security.keystore.password">keystorePass</prop>
						<prop key="xfire.security.keystore.file">org/codehaus/xfire/client/myPublicstore.jks</prop>						
						<prop key="xfire.security.public.alias">alias</prop>						
					</props>
				</property>
			</bean>
		</tns:inHandlers -->
	</tns:service>

</beans>
