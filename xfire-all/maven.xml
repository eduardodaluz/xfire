<project default="multiproject:install" xmlns:c="jelly:core" xmlns:maven="jelly:maven" xmlns:ant="jelly:ant" xmlns:util="jelly:util">

	<postGoal name="build:start">
		<!-- In order to process dependencies -->
		<maven:reactor goals="build:start" basedir="${basedir}/.." includes="${maven.multiproject.includes}" excludes="${maven.multiproject.excludes},xfire-all/project.xml"/>
		<!-- Collect data -->
		<maven:reactor collectionVar="modules" collectOnly="true" basedir="${basedir}/.." includes="${maven.multiproject.includes}" excludes="${maven.multiproject.excludes},xfire-all/project.xml"/>
		
		<!-- Prepares -->
		<ant:mkdir dir="${pom.build.sourceDirectory}"/>
		<ant:mkdir dir="${pom.build.unitTestSourceDirectory}"/>
		
		<c:forEach items="${modules}" var="module" indexVar="i">
			<!-- Adds source folders -->
			<ant:copy toDir="${pom.build.sourceDirectory}">
				<fileset dir="${module.build.sourceDirectory}" includes="**/*" excludes="**/.*,**/CVS"/>
			</ant:copy>

			<!-- Adds tests source folders -->
			<ant:copy toDir="${pom.build.unitTestSourceDirectory}">
				<fileset dir="${module.build.unitTestSourceDirectory}" includes="**/*" excludes="**/.*,**/CVS"/>
			</ant:copy>

			<!-- Adds dependencies -->
			<c:forEach items="${module.artifacts}" var="dependency" indexVar="j">
				<c:if test="${dependency.groupId != 'xfire'}">
					<ant:path id="xfire.all.dependency.${i}.${j}" location="${dependency.path}"/>
					<maven:addPath id="maven.dependency.classpath" refid="xfire.all.dependency.${i}.${j}"/>
				</c:if>
			</c:forEach>
		</c:forEach>
		<c:set var="sourcesPresent" value="true"/>
		<c:set var="unitTestSourcesPresent" value="false"/>
	</postGoal>

	<goal name="eclipse:generate-project">
		<ant:echo>Its just a meta project. No Eclipse project for you.</ant:echo>
	</goal>
	<goal name="eclipse:generate-classpath">
		<ant:echo>Its just a meta project. No Eclipse project for you.</ant:echo>
	</goal>
	
	<goal name="java:compile">
		<!-- Compile -->
		<maven:reactor goals="java:compile" basedir="${basedir}/.." includes="${maven.multiproject.includes}" excludes="${maven.multiproject.excludes},xfire-all/project.xml"/>

		<!-- Collect data -->
		<maven:reactor collectionVar="modules" collectOnly="true" basedir="${basedir}/.." includes="${maven.multiproject.includes}" excludes="${maven.multiproject.excludes},xfire-all/project.xml"/>

		<!-- Copies the classes -->
		<ant:mkdir dir="${maven.build.dest}"/>
		<c:forEach items="${modules}" var="module" indexVar="i">
			<ant:copy toDir="${maven.build.dest}">
				<fileset dir="${basedir}/../${module.artifactId}/target/classes" includes="**/*" excludes="**/.*,**/CVS"/>
			</ant:copy>
			<maven:copy-resources resources="${module.build.resources}" todir="${maven.build.dest}"/>
		</c:forEach>
	</goal>
	
	<goal name="test:compile" prereqs="java:compile">
		<!-- Compile -->
		<maven:reactor goals="test:compile" basedir="${basedir}/.." includes="${maven.multiproject.includes}" excludes="${maven.multiproject.excludes},xfire-all/project.xml"/>

		<!-- Collect data -->
		<maven:reactor collectionVar="modules" collectOnly="true" basedir="${basedir}/.." includes="${maven.multiproject.includes}" excludes="${maven.multiproject.excludes},xfire-all/project.xml"/>

		<!-- Copies the classes -->
		<ant:mkdir dir="${maven.test.dest}"/>
		<c:forEach items="${modules}" var="module" indexVar="i">
			<ant:copy toDir="${maven.test.dest}">
				<fileset dir="${basedir}/../${module.artifactId}/target/test-classes" includes="**/*" excludes="**/.*,**/CVS"/>
			</ant:copy>
			<maven:copy-resources resources="${module.build.unitTest.resources}" todir="${maven.test.dest}"/>
		</c:forEach>
	</goal>

</project>