<project default="multiproject:install" xmlns:c="jelly:core" xmlns:maven="jelly:maven" xmlns:ant="jelly:ant" xmlns:artifact="artifact">

	<preGoal name="multiproject:projects-init">
		<c:set var="x" value="${xfire.java5}"/>
		<c:choose>
			<c:when test="${x == true}">
				<c:set var="maven.multiproject.includes" value="${maven.multiproject.includes},${maven.multiproject.excludes},xfire-all/project.xml"/>
				<c:set var="maven.multiproject.excludes" value=""/>
			</c:when>
			<c:otherwise>
				<ant:echo><![CDATA[
************************************************************
* WARNING!                                                 *
*                                                          *
* Your are running a build without Java 5 modules.         *
*                                                          *
* In order to get Java 5 modules adds "-Dxfire.java5=true" *
* to the maven command line                                *
************************************************************
				]]></ant:echo>
			</c:otherwise>
		</c:choose>
	</preGoal>
	
	<goal name="dist:prepare-libs">
		<mkdir dir="${maven.build.dir}/libs"/>
		<c:forEach items="${pom.artifacts}" var="dependency">
			<c:if test="${dependency.groupId != 'xfire'}">
				<c:if test="${dependency.dependency.type != 'plugin'}">
					<c:set var="scope" value="${dependency.dependency.getProperty('scope')} "/>
					<c:if test="${scope == ' '}">
						<c:set var="scope" value="runtime"/>
					</c:if>
					<copy toDir="${maven.build.dir}/libs/${scope.trim()}" file="${dependency.path}"/>
				</c:if>
			</c:if>
		</c:forEach>
	</goal>
	
	<goal name="dist" prereqs="site,dist:prepare-libs">
		<attainGoal name="${maven.multiproject.type}:${maven.multiproject.type}"/>	
		<ant:zip destfile="${maven.build.dir}/${maven.final.name}.zip">
			<fileset dir="${basedir}" includes="src/**/*,LICENSE*,READ*" excludes="src/main/**/*,src/test/**/*"/>
			<fileset dir="${maven.build.dir}" includes="${maven.final.name}.${maven.multiproject.type}"/>
			<zipfileset dir="${pom.build.sourceDirectory}" includes="**/*" prefix="src/main/"/>
			<zipfileset dir="${pom.build.unitTestSourceDirectory}" includes="**/*" prefix="src/test"/>
			<zipfileset dir="${maven.docs.dest}" includes="**/*" prefix="docs/"/>
			<zipfileset dir="${maven.build.dir}/libs" includes="**/*" prefix="libs/"/>
		</ant:zip>
	</goal>

	<goal name="dist:deploy" description="Deploy a binary distribution" prereqs="dist">
		<c:new var="distTypeHandler" className="org.apache.maven.dist.DistributionArtifactTypeHandler" />
		<artifact:deploy
			artifact="${maven.build.dir}/${maven.final.name}.zip"
			type="distribution-zip"
			project="${pom}"
			typeHandler="${distTypeHandler}"
		/>
	</goal>

	<goal name="multiproject:dist">
		<maven:reactor goals="dist" basedir="${basedir}" includes="${maven.multiproject.includes}" excludes="${maven.multiproject.excludes}"/>
	</goal>

	<goal name="multiproject:dist-deploy">
		<maven:reactor goals="dist:deploy" basedir="${basedir}" includes="${maven.multiproject.includes}" excludes="${maven.multiproject.excludes}"/>
	</goal>

	<!-- Makes site:deploy not to run site goal. -->
	<goal name="site:deploy">
		<attainGoal name="site:${maven.site.deploy.method}deploy"/>
	</goal>	


</project>